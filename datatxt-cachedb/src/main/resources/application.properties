# Inventory Database


# SQLite connection configuration
datasource.username =
datasource.password =
datasource.driver-class-name = org.sqlite.JDBC

datasource.filename = cache.db
# Docker
workdir = /demodatasource.url = jdbc:sqlite:${workdir}/src/test/resources/${datasource.filename}
# Linux
datasource.url = jdbc:sqlite:${HOME}/${datasource.filename}
# Windows
datasource.url = jdbc:sqlite:${USERPROFILE}\\${datasource.filename}

# MySQL connection configuration

datasource.username = java
datasource.password = password
database=test
datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# Docker
# jdbc.server = localhost
# Docker compose
# jdbc.server = mysql-server-alpine
jdbc.server = 192.168.0.29
jdbc.port = 3306
# TODO: test the arguments
# rewriteBatchedStatements=true is switching JDBC to send multirow inserts 
datasource.url=jdbc:mysql://${jdbc.server}:${jdbc.port}/${database} 

# Cache database

# SQLite connection configuration
# memory
cache.datasource.url = jdbc:sqlite::memory:

# MySQL connection configuration

datasource.username = java
datasource.password = password
database=test
datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# Docker
# jdbc.server = localhost
# Docker compose
# jdbc.server = mysql-server-alpine
jdbc.server = 192.168.0.64
jdbc.port = 3306
# TODO: test the arguments
# rewriteBatchedStatements=true is switching JDBC to send multirow inserts
# Exception (ignored)invalid database address: jdbc:mysql://192.168.0.29:3306/test?useServerPrepStmts=false&rewriteBatchedStatements=true
#  
cache.datasource.url=jdbc:mysql://${jdbc.server}:${jdbc.port}/${database}?useServerPrepStmts=false&rewriteBatchedStatements=true
# ?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true
cache.datasource.url=jdbc:mysql://${jdbc.server}:${jdbc.port}/${database}


# TODO: H2 connection

import java.util.concurrent.TimeUnit

apply plugin: 'java'
apply plugin: 'groovy'
test.dependsOn 'cleanTest'

repositories {
    mavenCentral()
}

dependencies {
    // TODO:  verify if still needed to help with injections for TestNG listeners
    // compile 'com.google.inject:guice:3.0'

    testCompile group: 'org.testng', name: 'testng', version: '6.14.3+'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
 }

// Setup the test task
test {
    useTestNG() {
	// blank
     }

    // Disable the default groovy html reports since ReportNG is being used
    reports.html.enabled = false

    // Interceptors
    beforeTest { desc ->
       println "\n*** Starting execution of test ${desc.className}.${desc.name} ***"
    }
    afterTest { descriptor, result ->
        println "<<< Test ${descriptor.name} resulted in ${result.resultType} and took " + getElaspedTime(result.endTime - result.startTime)+" >>>\n"
    }

    // Modify the test logging
    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }
}

// Example of using groovy methods from build file
//  origin: 
def getElaspedTime(def time) {

    if(time / 1000 < 1)
    {
        return String.format("0 min, %.3f sec", time/1000)
    }
    else
    {
        return String.format("%d min, %d sec",
                TimeUnit.MILLISECONDS.toMinutes(time),
                TimeUnit.MILLISECONDS.toSeconds(time) -
                        TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(time))

        )
    }
}
